AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Request API

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'*'"
        AllowMethods: "'*'"

  RequestApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 2048
      Timeout: 480
      Policies:
        - Statement:
            - Sid: "FullAccessToS3Bucket"
              Effect: "Allow"
              Action:
                - "s3:ListBucket"  # Added ListBucket permission
                - "s3:GetObject" 
                - "s3:PutObject"  # Added GetObject permission
              Resource:
                - "arn:aws:s3:::biosarthi-genai"  # Bucket resource for ListBucket action
                - "arn:aws:s3:::biosarthi-genai/*" # Object resource for GetObject action
            - Sid: "BedrockScopedAccess"
              Effect: "Allow"
              Action:
                - "bedrock:InvokeModel"
              Resource:
                - "arn:aws:bedrock:*::foundation-model/*"
      ImageConfig:
        Command: ["app.lambda_handler"]  # This should match your function's entry point
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /requestapi
            Method: POST
    Metadata:
      Dockerfile: /home/ubuntu/deployment/bio-sarthi/src/Request_api/Dockerfile
      DockerContext: ./Request_api  # Ensure this context is correct for your build
      DockerTag: latest

  FirstApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 2048
      Timeout: 580
      Policies:
        - Statement:
            - Sid: "FullAccessToS3Bucket"
              Effect: "Allow"
              Action:
                - "s3:ListBucket"  # Added ListBucket permission
                - "s3:GetObject" 
                - "s3:PutObject"  # Added GetObject permission
              Resource:
                - "arn:aws:s3:::biosarthi-genai"  # Bucket resource for ListBucket action
                - "arn:aws:s3:::biosarthi-genai/*" # Object resource for GetObject action
            - Sid: "InvokeRequestApiFunction"
              Effect: "Allow"
              Action: "lambda:InvokeFunction"
              Resource: !GetAtt RequestApiFunction.Arn
            - Sid: "BedrockScopedAccess"
              Effect: "Allow"
              Action:
                - "bedrock:InvokeModel"
              Resource:
                - "arn:aws:bedrock:*::foundation-model/*"
      ImageConfig:
        Command: ["app.lambda_handler"]  # This should match your function's entry point
      Environment:
        Variables:
          REQUEST_FUNCTION_ARN: !GetAtt RequestApiFunction.Arn
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /firstapi
            Method: POST
    Metadata:
      Dockerfile: /home/ubuntu/deployment/bio-sarthi/src/First_api/Dockerfile
      DockerContext: ./First_api  # Ensure this context is correct for your build
      DockerTag: latest

  ResponseApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      MemorySize: 2048
      Timeout: 480
      Policies:
        - Statement:
            - Sid: "FullAccessToS3Bucket"
              Effect: "Allow"
              Action:
                - "s3:ListBucket"  # Added ListBucket permission
                - "s3:GetObject" 
                - "s3:PutObject"  # Added GetObject permission
              Resource:
                - "arn:aws:s3:::biosarthi-genai"  # Bucket resource for ListBucket action
                - "arn:aws:s3:::biosarthi-genai/*" # Object resource for GetObject action
            - Sid: "BedrockScopedAccess"
              Effect: "Allow"
              Action:
                - "bedrock:InvokeModel"
              Resource:
                - "arn:aws:bedrock:*::foundation-model/*"
      ImageConfig:
        Command: ["app.lambda_handler"]  # This should match your function's entry point
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /responseapi
            Method: POST
    Metadata:
      Dockerfile: /home/ubuntu/deployment/bio-sarthi/src/Response_api/Dockerfile
      DockerContext: ./Response_api  # Ensure this context is correct for your build
      DockerTag: latest

  